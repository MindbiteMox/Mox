@using Mindbite.Mox.Extensions
@using Microsoft.Extensions.Localization

@inject IStringLocalizer localizer

@{
    Layout = (string)ViewData["Layout"];

    var actionDescriptor = (Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor)ViewContext.ActionDescriptor;
    var filters = Mindbite.Mox.Attributes.MoxFormFilterAttribute.GetFilters(actionDescriptor.ControllerTypeInfo.AsType());

    var canCreate = (bool)ViewData["CanCreate"];
}

@if ((bool)ViewData["RenderDefaultIndexHeader"])
{
    @await Html.PartialAsync("Mox/UI/AppBreadCrumbs", new { IncludeCurrentMenu = false }.ToExpando())
    <h1>@ViewData["IndexPageHeading"]</h1>
    @await Html.PartialAsync("Mox/UI/Message")

    @if(canCreate || filters.Any())
    {
        <ul class="mox-filters">
            <li class="break">
                @if (canCreate)
                {
                    @Html.ActionLink(localizer["Skapa {0}", ViewData["ModelDisplayName"]?.ToString().ToLower()], "Create", null, ViewContext.RouteData.Values, new { @class = "mox-button" })
                }
            </li>
            @await Html.PartialAsync("_Form_Filters")
        </ul>
    }
}

@if (!string.IsNullOrWhiteSpace((string)ViewData["IndexHeaderPartial"]))
{ 
    @await Html.PartialAsync((string)ViewData["IndexHeaderPartial"], (object)Model)
}

<div id="js-table"></div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        Mox.UI.DataTable.create({
            container: document.getElementById('js-table'),
            url: '@Url.Action("Table", ViewContext.RouteData.Values)',
            filters: [@Html.Raw(string.Join(",", filters.Select(x => $"'{Html.Id(x.Name)}'")))],
        })
    });
</script>
@using Mindbite.Mox.Extensions
@using Microsoft.Extensions.Localization
@using Mindbite.Mox.UI

@inject IStringLocalizer localizer

@{
    Layout = (string)ViewData["Layout"];

    var actionDescriptor = (Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor)ViewContext.ActionDescriptor;
    var filters = await Mindbite.Mox.Attributes.MoxFormFilterAttribute.GetVisibleFiltersAsync(ViewContext.HttpContext, actionDescriptor.ControllerTypeInfo.AsType());
    var bulkActions = Mindbite.Mox.Attributes.MoxFormBulkActionsAttribute.GetViewModelAttribute(actionDescriptor.ControllerTypeInfo.AsType());

    var canCreate = (bool)ViewData["CanCreate"];

    var selectionElementId = $"TableSelectedIds_{Guid.NewGuid().ToString().Replace("-", "")}";
}

@if ((bool)ViewData["RenderDefaultIndexHeader"])
{
    @await Html.Mox().BreadCrumbsAsync(BreadCrumbMenuReference.Parent)
    <h1>@ViewData["IndexPageHeading"]</h1>
    @Html.Mox().Message()

    @if(canCreate || filters.Any() || bulkActions != null)
    {
        <ul class="mox-filters">
            @if(bulkActions == null || bulkActions != null && canCreate)
            {
                <li class="@(bulkActions != null ? "spacing" : "break")">
                    @if (canCreate)
                    {
                        @Html.ActionLink(localizer["Skapa {0}", ViewData["ModelDisplayName"]?.ToString().ToLower() ?? ""], "Create", null, ViewContext.RouteData.Values, new { @class = "mox-button" })
                    }
                </li>
            }
            @if(bulkActions != null)
            {
                <li class="break">
                    <form>
                        <input type="hidden" id="@selectionElementId">
                        @Html.DropDownList("BulkAction", Html.GetEnumSelectList(bulkActions.ActionsEnumType))
                        <button type="submit" class="mox-button save">@localizer["Utför"]</button>
                    </form>
                </li>
            }
            @await Html.PartialAsync("_Form_Filters")
        </ul>
    }
}

@if (!string.IsNullOrWhiteSpace((string)ViewData["IndexHeaderPartial"]))
{ 
    @await Html.PartialAsync((string)ViewData["IndexHeaderPartial"], (object)Model)
}

<div id="js-table"></div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        Mox.UI.DataTable.create({
            container: document.getElementById('js-table'),
            url: '@Url.Action("Table", ViewContext.RouteData.Values)',
            filters: [@Html.Raw(string.Join(",", filters.Select(x => $"'{Html.Id(x.Name)}'")))],
            @if(bulkActions != null)
            {
                @:onSelectedIdsChanged: function(dt) { document.getElementById('@selectionElementId').value = dt.selectedIds.join(',') }
            }
        })
    });
</script>
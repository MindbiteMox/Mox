@using Microsoft.AspNetCore.Mvc.Controllers
@using Mindbite.Mox.UI.Menu
@using Mindbite.Mox.Extensions
@using System.Reflection
@using System.Linq
@using Microsoft.Extensions.Localization;
@using Mindbite.Mox.UI
@inject Microsoft.Extensions.Options.IOptions<Mindbite.Mox.Configuration.Config> Config
@inject IStringLocalizer localizer

@{
    var includeCurrentMenu = false;
    var additionalNodes = Enumerable.Empty<MenuItem>();
    try
    {
        includeCurrentMenu = Model.IncludeCurrentMenu;
    }
    catch { }
    try
    {
        additionalNodes = Model.AdditionalNodes;
    }
    catch { }
    var roles = await Html.Mox().GetRolesAsync();
    var selectedAppMenu = Config.Value.Apps
        .Select(x => (app: x, menuItem: x.ResolveActiveMenu(this.ViewContext).Build(Url, roles).Flatten().LastOrDefault(y => y.MatchesView(this.ViewContext))))
        .FirstOrDefault(x => x.menuItem != null);
    var currentApp = selectedAppMenu.app;
    var selectedMenu = selectedAppMenu.menuItem;
    var parents = includeCurrentMenu ? selectedMenu.AllParents.Append(selectedMenu) : selectedMenu.AllParents;
    parents = parents.Concat(additionalNodes);
    var localizer = Html.Mox().Localizer;
}

<ul class="mox-breadcrumbs">
    <li><a href="@Url.AppAction(currentApp, roles)">@localizer[currentApp.Name]</a></li>
    @foreach (var parent in parents)
    {
        <li><a href="@Url.MenuAction(parent, roles)">@localizer[parent.Title]</a></li>
    }
</ul>
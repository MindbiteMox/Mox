@using Mindbite.Mox.ViewComponents
@using Mindbite.Mox
@using Mindbite.Mox.UI.Menu
@using Mindbite.Mox.UI
@using Mindbite.Mox.Extensions
@using Microsoft.Extensions.Localization

@inject Microsoft.Extensions.Options.IOptions<Mindbite.Mox.Configuration.Config> Config
@inject IStringLocalizer localizer

@{
    var roles = await Html.Mox().GetRolesAsync();
    var selectedAppMenu = Config.Value.Apps
        .Select(x => (app: x, menuItem: x.ResolveActiveMenu(this.ViewContext).Build(Url, roles).Flatten().LastOrDefault(y => y.MatchesView(this.ViewContext))))
        .FirstOrDefault(x => x.menuItem != null);
    var currentSelectedMenu = selectedAppMenu.menuItem;
}

<!DOCTYPE html>
<html>
<head>
    <script>
        function ready(callback) {
            if (document.readyState === "complete") {
                callback();
            } else {
                document.addEventListener("DOMContentLoaded", callback);
            }
        }
    </script>
    @await Html.PartialAsync("Mox/LayoutParts/_Head")
    <title>@(ViewData["Title"] ?? currentSelectedMenu?.Title ?? "Mox") - @(Config.Value.SiteTitle)</title>
    <meta name="viewport" content="width=device-width">
    @await Html.PartialAsync("Mox/StaticIncludes/_Files", new { RenderInHead = true }.ToExpando())
    @await Html.PartialAsync("Mox/StaticIncludes/_AppFiles", new { RenderInHead = true }.ToExpando())
    @RenderSection("styles", required: false)
</head>
<body>
    <header>
        <div class="mox-header">
            <div class="mox-header-menu-container">
                <div class="mox-header-logo">@Config.Value.SiteTitle</div>
                @await Html.Mox().Menu().AppMenuAsync(includeApp: true, maxDepth: 1)

                <div class="mox-header-right-menu">
                    @await Component.InvokeAsync("Mox/AppHeaderPartials")
                </div>

                <div style="clear: both"></div>
            </div>
        </div>

        <div class="mox-header-sub-menu">
            @await Html.Mox().Menu().AppMenuAsync(onlyCurrentApp: true, maxDepth: 1)
        </div>
    </header>
    <div style="clear: both;"></div>

    <div class="mox-content-wrapper">
        @{
            @if (currentSelectedMenu?.AllParents.Count() > 0)
            {
                <div class="mox-side-menu">
                    <span class="app-title">@localizer[currentSelectedMenu.AllParents.First().Title]</span>
                    @Html.Mox().Menu().RenderMenu(root: currentSelectedMenu.AllParents.First(), startLevel: 0, maxDepth: 1)
                </div>
            }
        }
        @RenderSection("sidemenu", required: false)
        <div class="mox-content-scroll-wrapper">
            <div class="mox-content">
                @RenderBody()
            </div>
        </div>
    </div>


    @await Html.PartialAsync("Mox/StaticIncludes/_Files", new { RenderInHead = false }.ToExpando())
    @await Html.PartialAsync("Mox/StaticIncludes/_AppFiles", new { RenderInHead = false }.ToExpando())
    @RenderSection("scripts", required: false)
    
    <script>Mox.UI.GlobalInstances.initDefault()</script>
</body>
</html>
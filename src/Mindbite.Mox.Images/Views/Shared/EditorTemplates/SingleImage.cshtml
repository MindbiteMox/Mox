@using Mindbite.Mox.Images
@using Mindbite.Mox.Images.Attributes

@inject Mindbite.Mox.Services.IDbContextFetcher contextFetcher

@model Mindbite.Mox.Images.ViewModels.EditorTemplates.SingleImage
@{
    var context = contextFetcher.FetchDbContext<Mindbite.Mox.Images.Data.IImagesDbContext>();

    var type = context.GetImageType(Model);
    var sizes = type.GetCustomAttributes(typeof(ImageSizeAttribute), false).Cast<ImageSizeAttribute>().ToList();
    var maxSize = sizes.OrderByDescending(x => x.Width * x.Height).FirstOrDefault();
    var maxSizeText = "";
    
    if (maxSize != null)
    {
        if (maxSize.Width > 0 && maxSize.Height > 0)
        {
            maxSizeText = $"(Minst {maxSize.Width}x{maxSize.Height}px)";
        }
        else if (maxSize.Width > 0)
        {
            maxSizeText = $"(Minst {maxSize.Width}px bred)";
        }
        else if (maxSize.Height > 0)
        {
            maxSizeText = $"(Minst {maxSize.Height}px hög)";
        }
    }

}

@Html.HiddenFor(x => x.ImageTypeFullName)
@Html.HiddenFor(x => x.Url)

@if (!string.IsNullOrWhiteSpace(Model?.Url))
{
    @Html.CheckBoxFor(x => x.Delete, new { style = "display: none" })

    <div class="single-image-image-container hidden-if-checked">
        <img src="@Model.Url" width="400" />
        <label for="@Html.IdFor(x => x.Delete)" class="mox-button">Ta bort bild</label>
    </div>

    <div class="hidden-if-not-checked" style="margin-bottom: 30px;">
        <label for="@Html.IdFor(x => x.Delete)" class="mox-button">Ta inte bort bild</label>
    </div>
}

<p class="material-input">
    @Html.LabelFor(x => x.File, Html.DisplayNameFor(x => x.File) + " " + maxSizeText)
    @Html.EditorFor(x => x.File)
</p>